nelmio_api_doc:
    use_validation_groups: true
    models: { use_jms: false }
    documentation:
        info:
            title: '%env(APP_NAME)%'
            description: '%env(resolve:APP_DESCRIPTION)%'
            version: '%env(APP_VERSION)%'
        components:
            securitySchemes:
                JWT:
                    description: Authentification via JWT Token
                    type: http
                    scheme: bearer
                    bearerFormat: JW
                # APIKey:
                #     type: apiKey
                #     in: header
                #     name: X-API-KEY
                # APICode:
                #     type: apiKey
                #     in: header
                #     name: X-API-SITE-CODE
            schemas:
                auth:
                    title: Authentification
                    type: object
                    properties:
                        username:
                            type: string
                            example: exemple@gmail.com
                        password:
                            type: string
                    required:
                        - username
                        - password
                tokenJWT:
                    title: JWT Token
                    type: object
                    properties:
                        token:
                            type: string
                    required:
                        - token
                APIKey:
                    title: API Key
                    type: object
                    properties:
                        X-API-KEY:
                            type: string
                    required:
                        - X-API-KEY
                list:
                    title: List
                    type: object
                    properties:
                        success:
                            type: boolean
                            example: true
                        code:
                            type: integer
                            example: 200
                        codeMessage:
                            type: string
                            example: success.message
                        message:
                            type: string
                            example: Success Message
                        data:
                            type: object
                            properties:
                                results:
                                    type: array
                                    items:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                                example: 1
                                total:
                                    type: integer
                                    example: 3
                                page:
                                    type: integer
                                    example: 1
                                limit:
                                    type: integer
                                    example: 10
                response:
                    title: get
                    type: object
                    properties:
                        success:
                            type: boolean
                            example: true
                        code:
                            type: string
                            example: success.message
                        message:
                            type: string
                            example: Success Message
            parameters:
                page:
                    name: page
                    description: Page number
                    in: query
                    required: false
                    schema:
                        type: integer
                        minimum: 1
                        default: 1
                limit:
                    name: limit
                    description: Limit number of results
                    in: query
                    # type: string
                    required: false
                    schema: 
                        type: integer
                        minimum: 1
                        default: 10
                search:
                    name: search
                    description: Search
                    in: query
                    # type: string
                    required: false
                    schema:
                        type: string
                # sort:
                #     name: Sort
                #     description: Sort
                #     in: query
                #     # type: string
                #     required: false
                #     schema:
                #         type: string
                #         enum:
                #             - ASC
                #             - DESC
                #         default: ASC
                order:
                    name: order
                    description: Order
                    in: query
                    required: false
                    schema:
                        type: string
                        enum:
                            - DESC
                            - ASC
                        default: DESC
                id:
                    name: id
                    description: 
                    in: path
                    required: true
                    schema:
                        type: integer
                name:
                    name: name
                    description: 
                    in: query
                    required: true
                    schema:
                        type: string
                code:
                    name: code
                    description: 
                    in: query
                    required: true
                    schema:
                        type: string
            # responses:
            #     '200':
            #         description: OK
            #     '201':
            #         description: Created
            #     '204':
            #         description: No Content
            #     '400':
            #         description: Bad Request
            #     '401':
            #         description: Unauthorized
            #     '403':
            #         description: Forbidden
            #     '404':
            #         description: Not Found
            #     '500':
            #         description: Internal Server Error
        # paths:
            # resource: '%kernel.project_dir%/config/routes/api/api_auth.yaml'
    areas: # to filter documented areas
        path_patterns:
            - ^/api(?!/doc$) # Accepts routes under /api except /api/doc
imports:
    - { resource: "../routes/api/api_auth.yaml" }